#!/bin/bash
shopt -s expand_aliases

echoPart(){

	echo "echo \"**************\""
	echo "echo $1"
	echo "echo \"**************\""
}

exportAll()
{
	PROMPT="$"
	
	if [ "$2" == "root" ]
	   then 
			PROMPT="#"
	fi
	echo "$PROMPT export $3=\"$4\""
	export $3="$4"
}
aliasAll()
{
	PROMPT="$"

	if [ "$2" == "root" ]
	   then 
			PROMPT="#"
	fi
	CMD=$4
  	CMD4="${CMD//[\"]/\\\"}"
    
	echo "$PROMPT alias $3=\"$CMD4\""
	alias $3="$CMD4"
}
userDo()
{
  echo "$ $2"
  su $1 -c "$2"
}
suDo(){

  echo "# $1"
  $1
}
userDoLog()
{

  echo "$ $2 >> $INSTALL_LOG_DIR/$3.log"
  su $1 -c "$2" >> $INSTALL_LOG_DIR/$3.log
}
suDoLog()
{
  echo "# $1 >> $INSTALL_LOG_DIR/$2.log"
  $1 >> $INSTALL_LOG_DIR/$2.log
}
userMkdir()
{
   if [ -d "$2" ]
   then
	    echo "# rm -rf $2"
	    rm -rf $2
  fi
  echo "# mkdir $2"
  mkdir $2
  echo "# chmod 0755 $2 && chown $1 $2"
  chmod 0755 $2 && chown $1 $2
}
allCd(){

	userDo $1 "cd $2"

	echo "# cd $2"
	cd $2	
}
userCongigure()
{  
  CMD="$2"
  CMD2="${CMD//[\"]/\\\"}"
     
  echo "$ ./configure $2"
  su $1 -c "./configure $CMD"
}
userGitClone()
{
   # su $1 -c "echo `pwd`"
   if [ -d "$4" ]
   then
	    echo "# rm -rf $4"
	    rm -rf $4
  fi
  echo "$ git clone $2 >> $INSTALL_LOG_DIR/$3.log"
  su $1 -c "git clone $2 >> $INSTALL_LOG_DIR/$3.log"
}
userGitChekout()
{
   echo "$ git checkout $2"   
   su $1 -c "git checkout $2"
}
userWgetTarxzf(){
	userDo $1 "wget $1"
	userDo $1 "tar xzf $2"
}
chmodx(){
	echo "# chmod +x $1"
	chmod +x $1	
}
function btcd(){

	$PROJECT_BITCOIN_DIR/src/./bitcoind -regtest -datadir=$USER_BITCOIN_DIR
}
echoPart "Install configuration"
PROMPT="$"

if [ "$2" == "root" ]
   then 
		PROMPT="#"
fi
echo "$PROMPT echo \"$2 configure $1\""
exportAll $1 $2 "PROJECT_USER" $1
exportAll $1 $2 "INSTALL_DIR" `pwd`
exportAll $1 $2 "INSTALL_LOG_DIR" "$INSTALL_DIR/../../log/install"
exportAll $1 $2 "INSTALL_TEST_DIR" "$INSTALL_DIR/../../test"
exportAll $1 $2 "INSTALL_CONF_DIR" "$INSTALL_DIR/../../conf/elementsProject.conf"

echoPart "APT configuration"
exportAll $1 $2 "APT_LIST" "apt-utils libzmq5-dev build-essential libtool autotools-dev autoconf pkg-config libssl-dev libboost-all-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler imagemagick librsvg2-bin libqrencode-dev autoconf openssl libssl-dev libevent-dev libminiupnpc-dev jq haskell-platform xz-utils autotools-dev automake g++ gpp pkg-config libdb++-dev libboost-all-dev libncurses-dev make openjdk-11-jre openjdk-11-jdk doxygen"

echoPart "Project configuration"
exportAll $1 $2 "PROJECT_DIR" "/opt/project"

echoPart "Berkeley DB configuration"
exportAll $1 $2 "DB4_INSTALL_PATH" "/opt"
exportAll $1 $2 "BDB_PREFIX" "/opt/db4"

echoPart "Elements configuration"
exportAll $1 $2 "PROJECT_ELEMENTS_DIR" "$PROJECT_DIR/elements"

echoPart "Bitcoin configuration"
exportAll $1 $2 "USER_BITCOIN_DIR" "/home/$PROJECT_USER/bitcoinData"
exportAll $1 $2 "PROJECT_BITCOIN_DIR" "$PROJECT_DIR/bitcoin"
exportAll $1 $2 "PROJECT_BITCOIN_BRANCH" "simplicity"
BITCOIN_CONFIGURE="./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" --disable-dependency-tracking --with-gui=no --disable-test --disable-bench"
echo "# BITCOIN_CONFIGURE=$BITCOIN_CONFIGURE"
aliasAll $1 $2 "btcd" "$PROJECT_BITCOIN_DIR/src/./bitcoind -regtest -datadir=$USER_BITCOIN_DIR"
aliasAll $1 $2 "b-dae" "btcd -datadir=$USER_BITCOIN_DIR"
aliasAll $1 $2 "b-cli" "btc -datadir=$USER_BITCOIN_DIR"

echoPart "Simplicity configuration"
exportAll $1 $2 "PROJECT_SIMPLICITY_DIR" "$PROJECT_DIR/simplicity"
exportAll $1 $2 "PROJECT_HAL_DIR" "$PROJECT_DIR/hal"

echoPart "Nix configuration"
exportAll $1 $2 "PROJECT_NIX_DIR" "$PROJECT_DIR/nix"
NIX_SHELL="nix-shell -p \"(import ./default.nix {}).haskellPackages.ghcWithPackages (pkgs: with pkgs; [Simplicity bech32])\""
aliasAll $1 $2 "simplicityenv" "cd $PROJECT_SIMPLICITY_DIR && $NIX_SHELL"

echoPart "Personas configuration"
exportAll $1 $2 "USER_ALICE_DIR" "/home/$PROJECT_USER/aliceData"
exportAll $1 $2 "USER_BOB_DIR" "/home/$PROJECT_USER/bobData"

aliasAll $1 $2 "alice-dae" "elementsd -datadir=$USER_ALICE_DIR"
aliasAll $1 $2 "bob-dae" "elementsd -datadir=$USER_BOB_DIR"
aliasAll $1 $2 "bob-cli" "elements-cli -datadir=$USER_BOB_DIR"
