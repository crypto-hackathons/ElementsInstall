#!/bin/bash
shopt -s expand_aliases

userExport()
{
  echo "\$ export $2=\"$3\""
  su $1 -c "export $2=\"$3\""
}
exportAll()
{
	echo "# export $2=\"$3\""
	export $2="$3"
	
	userExport "$1" "$2" "$3"	
}
userAlias()
{
  CMD=$3
  CMD2="${CMD//[\"]/\\\"}"

  echo "\$ alias $2=\"$CMD2\""
  su $1 -c "alias $2=\"$CMD2\""	
	
}
aliasAll()
{
    CMD=$3
  	CMD2="${CMD//[\"]/\\\"}"
    
	echo "# alias $2=\"$CMD2\""
	alias $2="$CMD2"
		
	userAlias "$1" "$2" "$3"
}
userDo()
{
  echo "$ $2"
  su $1 -c "$2"
}

suDo(){

  echo "\# $1"
  $1
}

userDoLog()
{

  echo "\$ $2 >> $INSTALL_LOG_DIR/$3.log"
  su $1 -c "$2" >> $INSTALL_LOG_DIR/$3.log
}

suDoLog()
{
  echo "# $1 >> $INSTALL_LOG_DIR/$2.log"
  $1 >> $INSTALL_LOG_DIR/$2.log
}

userMkdir()
{
   if [ -d "$2" ]
   then
	    echo "# rm -rf $2"
	    rm -rf $2
  fi
  echo "# mkdir $2"
  mkdir $2
  echo "# chmod 0755 $2 && chown $1 $2"
  chmod 0755 $2 && chown $1 $2
}

allCd(){
	echo "# cd $2"
	cd $2
	userDo $1 "cd $2"
}

userGitClone()
{
   # su $1 -c "echo `pwd`"
   if [ -d "$4" ]
   then
	    echo "# rm -rf $4"
	    rm -rf $4
  fi
  su $1 -c "git clone $2 >> $INSTALL_LOG_DIR/$3.log"
}

userGitChekout()
{
   # su $1 -c "echo `pwd`"   
   su $1 -c "git checkout >> $INSTALL_LOG_DIR/$3.log"
}

userWgetTarxzf(){
	userDo $1 "wget $1"
	userDo $1 "tar xzf $2"
}

echo "**************"
echo "Install configuration"
echo "**************"
exportAll $1 "PROJECT_USER" $1
exportAll $1 "INSTALL_DIR" `pwd`
exportAll $1 "INSTALL_LOG_DIR" "$INSTALL_DIR/../../log/install"
exportAll $1 "INSTALL_TEST_DIR" "$INSTALL_DIR/../../test"
exportAll $1 "INSTALL_CONF_DIR" "$INSTALL_DIR/../../conf/elementsProject.conf"

echo "************"
echo "Project configuration"
echo "************"
exportAll $1 "PROJECT_DIR" "/opt/project"

echo "************"
echo "Berkeley DB configuration"
echo "************"
exportAll $1 "DB4_INSTALL_PATH" "/opt"
exportAll $1 "BDB_PREFIX" "/opt/db4"

echo "************"
echo "Elements configuration"
echo "************"
exportAll $1 "PROJECT_ELEMENTS_DIR" "$PROJECT_DIR/elements"

echo "************"
echo "Bitcoin configuration"
echo "************"
exportAll $1 "USER_BITCOIN_DIR" "/home/$PROJECT_USER/bitcoinData"
exportAll $1 "PROJECT_BITCOIN_DIR" "$PROJECT_DIR/bitcoin"

aliasAll $1 "btc" "$PROJECT_BITCOIN_DIR/src/./bitcoin-cli -regtest"
aliasAll $1 "btcd" "$PROJECT_BITCOIN_DIR/src/./bitcoind -regtest -datadir=$USER_BITCOIN_DIR"
aliasAll $1 "b-dae" "btcd -datadir=$USER_BITCOIN_DIR"
aliasAll $1 "b-cli" "btc -datadir=$USER_BITCOIN_DIR"

echo "************"
echo "Simplicity configuration"
echo "************"
exportAll $1 "PROJECT_SIMPLICITY_DIR" "$PROJECT_DIR/simplicity"
exportAll $1 "PROJECT_HAL_DIR" "$PROJECT_DIR/hal"

NIX_SHELL="nix-shell -p \"(import ./default.nix {}).haskellPackages.ghcWithPackages (pkgs: with pkgs; [Simplicity bech32])\""

aliasAll $1 "simplicityenv" "cd $PROJECT_SIMPLICITY_DIR && $NIX_SHELL"

echo "************"
echo "Personas configuration"
echo "************"
exportAll $1 "USER_ALICE_DIR" "/home/$PROJECT_USER/aliceData"
exportAll $1 "USER_BOB_DIR" "/home/$PROJECT_USER/bobData"

aliasAll $1 "alice-dae" "elementsd -datadir=$USER_ALICE_DIR"
aliasAll $1 "bob-dae" "elementsd -datadir=$USER_BOB_DIR"
aliasAll $1 "bob-cli" "elements-cli -datadir=$USER_BOB_DIR"
